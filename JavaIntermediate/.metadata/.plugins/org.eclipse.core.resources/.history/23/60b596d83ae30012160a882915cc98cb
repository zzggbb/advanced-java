
public class BinaryTree {
	
	TreeNode root;
	public BinaryTree() {
		
	}
	
	public void add(int value) { 
		if (root == null) root = new TreeNode(value);
		else {
			boolean finished = false;
			while (!finished) {
				TreeNode currentNode = root;
				
				if ((value < currentNode.value) && (currentNode.left != null)) currentNode = currentNode.left;
				else {
					currentNode.left = new TreeNode(value);
					finished = true;
				}
				if ((value > currentNode.value) && (currentNode.right != null)) currentNode = currentNode.right;
				else {
					currentNode.right = new TreeNode(value);
					finished = true;
				}
			}
		}
	}
	/*
	public void print() {
		TreeNode currentNode = root;
		
	}
	*/
	
	public void print(TreeNode node, int indent) {
		if (node != null) {
		
			for (int i = 0; i < indent; i++) {
				System.out.print(" ");
			}
			System.out.println(node.value);
			print(node.left, indent + 2);
			print(node.left, indent + 2);
		}
	}
}
